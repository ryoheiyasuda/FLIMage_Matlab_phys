function varargout = FLIMControl(varargin)
% FLIMCONTROL M-file for FLIMControl.fig
%      FLIMCONTROL, by itself, creates a new FLIMCONTROL or raises the existing
%      singleton*.
%
%      H = FLIMCONTROL returns the handle to a new FLIMCONTROL or the handle to
%      the existing singleton*.
%
%      FLIMCONTROL('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in FLIMCONTROL.M with the given input arguments.
%
%      FLIMCONTROL('Property','Value',...) creates a new FLIMCONTROL or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before FLIMControl_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to FLIMControl_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help FLIMControl

% Last Modified by GUIDE v2.5 07-Aug-2003 00:54:12

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @FLIMControl_OpeningFcn, ...
                   'gui_OutputFcn',  @FLIMControl_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin & isstr(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before FLIMControl is made visible.
function FLIMControl_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to FLIMControl (see VARARGIN)

% Choose default command line output for FLIMControl
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes FLIMControl wait for user response (see UIRESUME)
% uiwait(handles.figure1);
global gh;
gh.spc.FLIMControl = handles;

% --- Outputs from this function are returned to the command line.
function varargout = FLIMControl_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in Focus.
function Focus_Callback(hObject, eventdata, handles)
% hObject    handle to Focus (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
spc_executeFocus;

% --- Executes on button press in Grab.
function Grab_Callback(hObject, eventdata, handles)
% hObject    handle to Grab (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
spc_executeGrab;

% --- Executes on button press in Loop.
function Loop_Callback(hObject, eventdata, handles)
% hObject    handle to Loop (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in Image.
function Image_Callback(hObject, eventdata, handles)
% hObject    handle to Image (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of Image

value = get(handles, 'value');
state.spc.ac
